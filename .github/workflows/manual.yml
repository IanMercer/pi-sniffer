# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: [self-hosted, "Windows"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'  # Specify the version of .NET your service uses

      - name: Build Windows Service
        run: dotnet publish -c Release -o ./publish

      - name: Stop Existing Service
        run: |
          sc.exe stop YourServiceName || echo "Service not running"
        shell: cmd

      - name: Deploy New Version
        run: |
          xcopy /E /Y /I publish\* "C:\Path\To\Your\Service\Directory"  # Update this to the directory of your service
        shell: cmd

      - name: Start or Install Service
        run: |
          sc.exe query YourServiceName || sc.exe create YourServiceName binPath= "C:\Path\To\Your\Service\Directory\YourServiceExecutable.exe" DisplayName= "Your Service Display Name" start= auto
          sc.exe start YourServiceName
        shell: cmd
